// This file is generated by rust-protobuf 3.5.1. Do not edit
// .proto file is parsed by protoc --rust_out=...
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `steammessages_unified_base.steamclient.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_5_1;

// @@protoc_insertion_point(message:NoResponse)
#[derive(PartialEq,Clone,Default,Debug)]
pub struct NoResponse {
    // special fields
    // @@protoc_insertion_point(special_field:NoResponse.special_fields)
    pub special_fields: ::protobuf::SpecialFields,
}

impl<'a> ::std::default::Default for &'a NoResponse {
    fn default() -> &'a NoResponse {
        <NoResponse as ::protobuf::Message>::default_instance()
    }
}

impl NoResponse {
    pub fn new() -> NoResponse {
        ::std::default::Default::default()
    }

    fn generated_message_descriptor_data() -> ::protobuf::reflect::GeneratedMessageDescriptorData {
        let mut fields = ::std::vec::Vec::with_capacity(0);
        let mut oneofs = ::std::vec::Vec::with_capacity(0);
        ::protobuf::reflect::GeneratedMessageDescriptorData::new_2::<NoResponse>(
            "NoResponse",
            fields,
            oneofs,
        )
    }
}

impl ::protobuf::Message for NoResponse {
    const NAME: &'static str = "NoResponse";

    fn is_initialized(&self) -> bool {
        true
    }

    fn merge_from(&mut self, is: &mut ::protobuf::CodedInputStream<'_>) -> ::protobuf::Result<()> {
        while let Some(tag) = is.read_raw_tag_or_eof()? {
            match tag {
                tag => {
                    ::protobuf::rt::read_unknown_or_skip_group(tag, is, self.special_fields.mut_unknown_fields())?;
                },
            };
        }
        ::std::result::Result::Ok(())
    }

    // Compute sizes of nested messages
    #[allow(unused_variables)]
    fn compute_size(&self) -> u64 {
        let mut my_size = 0;
        my_size += ::protobuf::rt::unknown_fields_size(self.special_fields.unknown_fields());
        self.special_fields.cached_size().set(my_size as u32);
        my_size
    }

    fn write_to_with_cached_sizes(&self, os: &mut ::protobuf::CodedOutputStream<'_>) -> ::protobuf::Result<()> {
        os.write_unknown_fields(self.special_fields.unknown_fields())?;
        ::std::result::Result::Ok(())
    }

    fn special_fields(&self) -> &::protobuf::SpecialFields {
        &self.special_fields
    }

    fn mut_special_fields(&mut self) -> &mut ::protobuf::SpecialFields {
        &mut self.special_fields
    }

    fn new() -> NoResponse {
        NoResponse::new()
    }

    fn clear(&mut self) {
        self.special_fields.clear();
    }

    fn default_instance() -> &'static NoResponse {
        static instance: NoResponse = NoResponse {
            special_fields: ::protobuf::SpecialFields::new(),
        };
        &instance
    }
}

impl ::protobuf::MessageFull for NoResponse {
    fn descriptor() -> ::protobuf::reflect::MessageDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::MessageDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().message_by_package_relative_name("NoResponse").unwrap()).clone()
    }
}

impl ::std::fmt::Display for NoResponse {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::protobuf::text_format::fmt(self, f)
    }
}

impl ::protobuf::reflect::ProtobufValue for NoResponse {
    type RuntimeType = ::protobuf::reflect::rt::RuntimeTypeMessage<Self>;
}

#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:EProtoExecutionSite)
pub enum EProtoExecutionSite {
    // @@protoc_insertion_point(enum_value:EProtoExecutionSite.k_EProtoExecutionSiteUnknown)
    k_EProtoExecutionSiteUnknown = 0,
    // @@protoc_insertion_point(enum_value:EProtoExecutionSite.k_EProtoExecutionSiteSteamClient)
    k_EProtoExecutionSiteSteamClient = 2,
}

impl ::protobuf::Enum for EProtoExecutionSite {
    const NAME: &'static str = "EProtoExecutionSite";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<EProtoExecutionSite> {
        match value {
            0 => ::std::option::Option::Some(EProtoExecutionSite::k_EProtoExecutionSiteUnknown),
            2 => ::std::option::Option::Some(EProtoExecutionSite::k_EProtoExecutionSiteSteamClient),
            _ => ::std::option::Option::None
        }
    }

    fn from_str(str: &str) -> ::std::option::Option<EProtoExecutionSite> {
        match str {
            "k_EProtoExecutionSiteUnknown" => ::std::option::Option::Some(EProtoExecutionSite::k_EProtoExecutionSiteUnknown),
            "k_EProtoExecutionSiteSteamClient" => ::std::option::Option::Some(EProtoExecutionSite::k_EProtoExecutionSiteSteamClient),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [EProtoExecutionSite] = &[
        EProtoExecutionSite::k_EProtoExecutionSiteUnknown,
        EProtoExecutionSite::k_EProtoExecutionSiteSteamClient,
    ];
}

impl ::protobuf::EnumFull for EProtoExecutionSite {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("EProtoExecutionSite").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = match self {
            EProtoExecutionSite::k_EProtoExecutionSiteUnknown => 0,
            EProtoExecutionSite::k_EProtoExecutionSiteSteamClient => 1,
        };
        Self::enum_descriptor().value_by_index(index)
    }
}

impl ::std::default::Default for EProtoExecutionSite {
    fn default() -> Self {
        EProtoExecutionSite::k_EProtoExecutionSiteUnknown
    }
}

impl EProtoExecutionSite {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<EProtoExecutionSite>("EProtoExecutionSite")
    }
}

/// Extension fields
pub mod exts {

    pub const description: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::FieldOptions, ::std::string::String> = ::protobuf::ext::ExtFieldOptional::new(50000, ::protobuf::descriptor::field_descriptor_proto::Type::TYPE_STRING);

    pub const service_description: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::ServiceOptions, ::std::string::String> = ::protobuf::ext::ExtFieldOptional::new(50000, ::protobuf::descriptor::field_descriptor_proto::Type::TYPE_STRING);

    pub const service_execution_site: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::ServiceOptions, ::protobuf::EnumOrUnknown<super::EProtoExecutionSite>> = ::protobuf::ext::ExtFieldOptional::new(50008, ::protobuf::descriptor::field_descriptor_proto::Type::TYPE_ENUM);

    pub const method_description: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::MethodOptions, ::std::string::String> = ::protobuf::ext::ExtFieldOptional::new(50000, ::protobuf::descriptor::field_descriptor_proto::Type::TYPE_STRING);

    pub const enum_description: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::EnumOptions, ::std::string::String> = ::protobuf::ext::ExtFieldOptional::new(50000, ::protobuf::descriptor::field_descriptor_proto::Type::TYPE_STRING);

    pub const enum_value_description: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::EnumValueOptions, ::std::string::String> = ::protobuf::ext::ExtFieldOptional::new(50000, ::protobuf::descriptor::field_descriptor_proto::Type::TYPE_STRING);
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n,steammessages_unified_base.steamclient.proto\x1a\x20google/protobuf/d\
    escriptor.proto\"\x0c\n\nNoResponse*]\n\x13EProtoExecutionSite\x12\x20\n\
    \x1ck_EProtoExecutionSiteUnknown\x10\0\x12$\n\x20k_EProtoExecutionSiteSt\
    eamClient\x10\x02:A\n\x0bdescription\x18\xd0\x86\x03\x20\x01(\t\x12\x1d.\
    google.protobuf.FieldOptionsR\x0bdescription:R\n\x13service_description\
    \x18\xd0\x86\x03\x20\x01(\t\x12\x1f.google.protobuf.ServiceOptionsR\x12s\
    erviceDescription:\x8b\x01\n\x16service_execution_site\x18\xd8\x86\x03\
    \x20\x01(\x0e2\x14.EProtoExecutionSite\x12\x1f.google.protobuf.ServiceOp\
    tions:\x1ck_EProtoExecutionSiteUnknownR\x14serviceExecutionSite:O\n\x12m\
    ethod_description\x18\xd0\x86\x03\x20\x01(\t\x12\x1e.google.protobuf.Met\
    hodOptionsR\x11methodDescription:I\n\x10enum_description\x18\xd0\x86\x03\
    \x20\x01(\t\x12\x1c.google.protobuf.EnumOptionsR\x0fenumDescription:Y\n\
    \x16enum_value_description\x18\xd0\x86\x03\x20\x01(\t\x12!.google.protob\
    uf.EnumValueOptionsR\x14enumValueDescriptionB\x05H\x01\x80\x01\0J\xb8\
    \x05\n\x06\x12\x04\0\0\x20\x01\n\t\n\x02\x03\0\x12\x03\0\0*\n\x08\n\x01\
    \x08\x12\x03\x02\0\x1c\n\t\n\x02\x08\t\x12\x03\x02\0\x1c\n\x08\n\x01\x08\
    \x12\x03\x03\0#\n\t\n\x02\x08\x10\x12\x03\x03\0#\n\t\n\x01\x07\x12\x04\
    \x05\0\x07\x01\n\t\n\x02\x07\0\x12\x03\x06\x08,\n\n\n\x03\x07\0\x02\x12\
    \x03\x05\x07$\n\n\n\x03\x07\0\x04\x12\x03\x06\x08\x10\n\n\n\x03\x07\0\
    \x05\x12\x03\x06\x11\x17\n\n\n\x03\x07\0\x01\x12\x03\x06\x18#\n\n\n\x03\
    \x07\0\x03\x12\x03\x06&+\n\t\n\x01\x07\x12\x04\t\0\x0c\x01\n\t\n\x02\x07\
    \x01\x12\x03\n\x084\n\n\n\x03\x07\x01\x02\x12\x03\t\x07&\n\n\n\x03\x07\
    \x01\x04\x12\x03\n\x08\x10\n\n\n\x03\x07\x01\x05\x12\x03\n\x11\x17\n\n\n\
    \x03\x07\x01\x01\x12\x03\n\x18+\n\n\n\x03\x07\x01\x03\x12\x03\n.3\n\t\n\
    \x02\x07\x02\x12\x03\x0b\x08n\n\n\n\x03\x07\x02\x02\x12\x03\t\x07&\n\n\n\
    \x03\x07\x02\x04\x12\x03\x0b\x08\x10\n\n\n\x03\x07\x02\x06\x12\x03\x0b\
    \x11%\n\n\n\x03\x07\x02\x01\x12\x03\x0b&<\n\n\n\x03\x07\x02\x03\x12\x03\
    \x0b?D\n\n\n\x03\x07\x02\x08\x12\x03\x0bEm\n\n\n\x03\x07\x02\x07\x12\x03\
    \x0bPl\n\t\n\x01\x07\x12\x04\x0e\0\x10\x01\n\t\n\x02\x07\x03\x12\x03\x0f\
    \x083\n\n\n\x03\x07\x03\x02\x12\x03\x0e\x07%\n\n\n\x03\x07\x03\x04\x12\
    \x03\x0f\x08\x10\n\n\n\x03\x07\x03\x05\x12\x03\x0f\x11\x17\n\n\n\x03\x07\
    \x03\x01\x12\x03\x0f\x18*\n\n\n\x03\x07\x03\x03\x12\x03\x0f-2\n\t\n\x01\
    \x07\x12\x04\x12\0\x14\x01\n\t\n\x02\x07\x04\x12\x03\x13\x081\n\n\n\x03\
    \x07\x04\x02\x12\x03\x12\x07#\n\n\n\x03\x07\x04\x04\x12\x03\x13\x08\x10\
    \n\n\n\x03\x07\x04\x05\x12\x03\x13\x11\x17\n\n\n\x03\x07\x04\x01\x12\x03\
    \x13\x18(\n\n\n\x03\x07\x04\x03\x12\x03\x13+0\n\t\n\x01\x07\x12\x04\x16\
    \0\x18\x01\n\t\n\x02\x07\x05\x12\x03\x17\x087\n\n\n\x03\x07\x05\x02\x12\
    \x03\x16\x07(\n\n\n\x03\x07\x05\x04\x12\x03\x17\x08\x10\n\n\n\x03\x07\
    \x05\x05\x12\x03\x17\x11\x17\n\n\n\x03\x07\x05\x01\x12\x03\x17\x18.\n\n\
    \n\x03\x07\x05\x03\x12\x03\x1716\n\n\n\x02\x05\0\x12\x04\x1a\0\x1d\x01\n\
    \n\n\x03\x05\0\x01\x12\x03\x1a\x05\x18\n\x0b\n\x04\x05\0\x02\0\x12\x03\
    \x1b\x08)\n\x0c\n\x05\x05\0\x02\0\x01\x12\x03\x1b\x08$\n\x0c\n\x05\x05\0\
    \x02\0\x02\x12\x03\x1b'(\n\x0b\n\x04\x05\0\x02\x01\x12\x03\x1c\x08-\n\
    \x0c\n\x05\x05\0\x02\x01\x01\x12\x03\x1c\x08(\n\x0c\n\x05\x05\0\x02\x01\
    \x02\x12\x03\x1c+,\n\n\n\x02\x04\0\x12\x04\x1f\0\x20\x01\n\n\n\x03\x04\0\
    \x01\x12\x03\x1f\x08\x12\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(1);
            deps.push(::protobuf::descriptor::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(1);
            messages.push(NoResponse::generated_message_descriptor_data());
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(EProtoExecutionSite::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
